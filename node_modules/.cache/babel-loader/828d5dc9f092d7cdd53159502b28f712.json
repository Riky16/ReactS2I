{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/riccardodonati/Documenti/Start2Impact/SviluppoWeb/React/books-website/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport BooksFind from \"./component/BooksFind\";\nimport About from \"./component/About\";\nimport BookDetail from \"./component/BookDetail\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./component/Nav\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  _s();\n\n  const [searchTerm, setsearchTerm] = useState(\"\");\n  const [books, setBooks] = useState({\n    items: []\n  });\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false); // API\n\n  let API_URL = `https://www.googleapis.com/books/v1/volumes`;\n\n  const fetchBooks = async () => {\n    setLoading(true);\n    setError(false);\n\n    try {\n      const result = await axios.get(`${API_URL}?q=${searchTerm}`);\n      setBooks(result.data);\n    } catch (error) {\n      setError(true);\n    }\n\n    setLoading(false);\n  };\n\n  const onInputChange = e => {\n    setsearchTerm(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    fetchBooks();\n  };\n\n  const Home = () => {\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ciao\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          exact: true,\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          exact: true,\n          component: About\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"KozndX6tLgrqHj10S0X1dbkSeik=\");\n\n_c = App;\nexport default App; // <Route path=\"/book/:id\" />\\\n// const Home = () => {\n//   <div>\n//     <form onSubmit={onSubmitHandler}>\n//       <input\n//         type=\"search\"\n//         value={searchTerm}\n//         onChange={onInputChange}\n//         required\n//       />\n//       <button>Search</button>\n//       {error && (\n//         <div style={{ color: `red` }}>\n//           some error occurred, while fetching api\n//         </div>\n//       )}\n//     </form>\n//     {loading && (\n//       <div style={{ color: `green` }}>\n//         fetching books for \"<strong>{searchTerm}</strong>\"\n//       </div>\n//     )}\n//     <div>\n//       {books.items.map((book, index) => (\n//         <BooksFind\n//           key={index}\n//           title={book.volumeInfo.title}\n//           publishedDate={book.volumeInfo.publishedDate}\n//           bookID={book.id}\n//           authors={book.volumeInfo.authors}\n//         />\n//       ))}\n//     </div>\n//   </div>;\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/riccardodonati/Documenti/Start2Impact/SviluppoWeb/React/books-website/src/App.js"],"names":["React","useState","BooksFind","About","BookDetail","BrowserRouter","Router","Switch","Route","Nav","axios","App","searchTerm","setsearchTerm","books","setBooks","items","error","setError","loading","setLoading","API_URL","fetchBooks","result","get","data","onInputChange","e","target","value","console","log","onSubmitHandler","preventDefault","Home"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC;AAAEe,IAAAA,KAAK,EAAE;AAAT,GAAD,CAAlC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACkB,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC,CAJa,CAMb;;AACA,MAAIoB,OAAO,GAAI,6CAAf;;AAEA,QAAMC,UAAU,GAAG,YAAY;AAC7BF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,KAAD,CAAR;;AACA,QAAI;AACF,YAAMK,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAEH,OAAQ,MAAKT,UAAW,EAArC,CAArB;AACAG,MAAAA,QAAQ,CAACQ,MAAM,CAACE,IAAR,CAAR;AACD,KAHD,CAGE,OAAOR,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACDE,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVD;;AAYA,QAAMM,aAAa,GAAIC,CAAD,IAAO;AAC3Bd,IAAAA,aAAa,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACC,MAAF,CAASC,KAArB;AACD,GAHD;;AAKA,QAAMG,eAAe,GAAIL,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACM,cAAF;AACAX,IAAAA,UAAU;AACX,GAHD;;AAKA,QAAMY,IAAI,GAAG,MAAM;AACjB;AAAA;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAGD,GAJD;;AAMA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAA,8BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,MAArB;AAAsB,UAAA,SAAS,EAAEA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,SAAS,EAAE/B;AAAtC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhDQQ,G;;KAAAA,G;AAkDT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport BooksFind from \"./component/BooksFind\";\nimport About from \"./component/About\";\nimport BookDetail from \"./component/BookDetail\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Nav from \"./component/Nav\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [searchTerm, setsearchTerm] = useState(\"\");\n  const [books, setBooks] = useState({ items: [] });\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  // API\n  let API_URL = `https://www.googleapis.com/books/v1/volumes`;\n\n  const fetchBooks = async () => {\n    setLoading(true);\n    setError(false);\n    try {\n      const result = await axios.get(`${API_URL}?q=${searchTerm}`);\n      setBooks(result.data);\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  const onInputChange = (e) => {\n    setsearchTerm(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    fetchBooks();\n  };\n\n  const Home = () => {\n    <div>\n      <p>ciao</p>\n    </div>;\n  };\n\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" exact component={About} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n// <Route path=\"/book/:id\" />\\\n// const Home = () => {\n//   <div>\n//     <form onSubmit={onSubmitHandler}>\n//       <input\n//         type=\"search\"\n//         value={searchTerm}\n//         onChange={onInputChange}\n//         required\n//       />\n//       <button>Search</button>\n//       {error && (\n//         <div style={{ color: `red` }}>\n//           some error occurred, while fetching api\n//         </div>\n//       )}\n//     </form>\n//     {loading && (\n//       <div style={{ color: `green` }}>\n//         fetching books for \"<strong>{searchTerm}</strong>\"\n//       </div>\n//     )}\n//     <div>\n//       {books.items.map((book, index) => (\n//         <BooksFind\n//           key={index}\n//           title={book.volumeInfo.title}\n//           publishedDate={book.volumeInfo.publishedDate}\n//           bookID={book.id}\n//           authors={book.volumeInfo.authors}\n//         />\n//       ))}\n//     </div>\n//   </div>;\n// };\n"]},"metadata":{},"sourceType":"module"}